import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'dart:convert';

import 'package:flutter/services.dart';
import 'package:flutter_app/model/Autogenerated.dart';
import 'package:flutter_app/utils/toast.dart';

class JsonDemo extends StatefulWidget {
  @override
  _JsonDemoState createState() => _JsonDemoState();
}

class _JsonDemoState extends State<JsonDemo> {
  String title = '手动解析 + 插件解析Json';

  String _result = '';

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: title,
      home: Scaffold(
        appBar: AppBar(
          title: Text(title),
        ),
        body: Column(
          children: <Widget>[
            Text(_result),
            RaisedButton(onPressed: (){
              testJson1();
            }, child: Text('手动解析Json')),
            RaisedButton(onPressed:(){
              testJson2();
            }, child: Text('手动解析Json')),
            RaisedButton(onPressed: (){
              testJson3();
            }, child: Text('借助插件解析Json')),
          ],
        ),
      ),
    );
  }

  testJson1() {
    String jsonStr =
        '{ "icon": "http://www.devio.org/io/flutter_app/img/ln_food.png", "title": "美食林", "url": "https://m.ctrip.com/webapp/you/foods/address.html?new=1&ishideheader=true", "statusBarColor": "19A0F0", "hideAppBar": true }';
    Map<String, dynamic> map = json.decode(jsonStr);
    setState(() {
      _result = '';
      _result += map['icon'];
      _result += '\n';
      _result += map['title'];
    });
  }

  testJson2() {
    //Json解析复杂数据
    //1、https://www.devio.org/io/tools/json-to-dart/ 上将json格式的文字转换为Dart格式。
    //2、项目下创建data目录，然后将home_page复制进去。
    //3、在pubspec.yaml中配置
    //4、读取读取文件数据
    // 第一种读取的方式
    //DefaultAssetBundle.of(context).loadString(key)
    // 第二种读取的方式
    rootBundle.loadString('data/home_page.json').then((value){
      Map<String,dynamic> map = json.decode(value);
      Autogenerated autogenerated = Autogenerated.fromJson(map);
      Toast.toast(context,msg: '解析成功  ${autogenerated.bannerList[0].toString()}');
    });
  }

  testJson3() {
    //json_serializable和built_value 插件用来解析
    Toast.toast(context,msg: '插件解析,在代码中记录了插件，但是没有实现');
  }
}
